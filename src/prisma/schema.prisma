// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                   String    @id @default(auto()) @map("_id") @db.ObjectId
  providerUserId       String?   @unique
  firstname            String
  lastname             String
  email                String    @unique
  password             String
  address              String?
  phone                String?
  isAdmin              Boolean   @default(false)
  isActive             Boolean   @default(true)
  termsAccepted        Boolean   @default(false)
  isVerified           Boolean   @default(false)
  verifyToken          String?
  verifyExpairy        DateTime?
  passwordResetToken   String?
  passwordResetExpairy DateTime?
  sessions             Session[]
  aboOwner             Boolean   @default(false)
  aboId                String    @db.ObjectId
  abo                  Abo       @relation(fields: [aboId], references: [id])
  departmentId  String @db.ObjectId
  department Department @relation(fields: [departmentId], references: [id])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model Licnese {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  maxUser     Int
  perUser     Float
  description String
  features    Feature[]
}

model Feature {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  feature   String
  licenseId String  @db.ObjectId
  license   Licnese @relation(fields: [licenseId], references: [id])
}

model Abo {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  users         User[]
  expireDate    DateTime
  expired       Boolean  @default(false)
  paid          Boolean  @default(false)
  paymentMethod String
  paymentId     String
  paymentDate   DateTime
  theme Theme[]
}

model Theme {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  logo String? 
  mainColor String?
  secondColor String?
  aboId String @db.ObjectId
  abo Abo @relation(fields: [aboId], references: [id])
}

model Department {
  id String @default(auto()) map("_id") @id @db.ObjectId
  name String
  user User[]
}

model Link{
  id String @default(auto()) @id @map("_id") @db.ObjectId
  url String

}

model linkCategory{
  
}